# Copyright 2020 ETH Zurich and University of Bologna.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Author: Paul Scheffler, ETH Zurich
#         Matheus Cavalcante, ETH Zurich

variables:
  GIT_SUBMODULE_STRATEGY: recursive

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_REF_NAME

before_script:
  - env
  - git submodule sync --recursive
  - git submodule foreach --recursive git reset --hard
  # Clean up some stuff that the CI misses

after_script:
  - env

stages:
  - toolchain
  - build
  - test

tc-gcc:
  stage: toolchain
  script:
    - git submodule update --init --recursive -- toolchain/riscv-gnu-toolchain
    - make toolchain
  variables:
    GIT_SUBMODULE_STRATEGY: none
  artifacts:
    paths:
      - install/riscv-gcc
    expire_in: 1 day

tc-isa-sim:
  stage: toolchain
  script:
    - git submodule update --init --recursive -- toolchain/riscv-isa-sim
    - git submodule foreach --recursive git reset --hard
    - make riscv-isa-sim
  variables:
    GIT_SUBMODULE_STRATEGY: none
  artifacts:
    paths:
      - install/riscv-isa-sim
    expire_in: 1 day

build_apps:
  stage: build
  script:
    - make -C apps
  artifacts:
    paths:
      - apps/bin
  needs: ["tc-gcc"]
  dependencies:
    - tc-gcc

build_riscv_tests:
  stage: build
  script:
    - git submodule update --init --recursive -- toolchain/riscv-isa-sim
    - git submodule update --init --recursive -- apps/riscv-tests
    - make -C apps riscv_tests
  artifacts:
    paths:
      - apps/bin
  needs: ["tc-gcc"]
  dependencies:
    - tc-gcc

build_vsim:
  stage: build
  script:
    - make -C hardware compile
  artifacts:
    paths:
      - hardware/build

hello_world:
  stage: test
  script:
    - make -C hardware app=${CI_JOB_NAME} simc
  artifacts:
    paths:
      - hardware/build/trace_hart_*.log
      - hardware/build/transcript

riscv_tests:
  stage: test
  script:
    - make -C hardware riscv_tests_simc
  artifacts:
    paths:
      - hardware/build/rv*.trace
  needs: ["build_riscv_tests"]
  dependencies:
    - build_riscv_tests
